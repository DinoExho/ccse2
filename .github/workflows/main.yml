name: Python Application Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - run: pytest

  snyk_scan:
    name: Snyk Scan
    needs: build_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK }}
        with:
          args: --severity-threshold=high

  security_analysis:
    name: CodeQL Analysis
    needs: snyk_scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: python
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      - uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  deploy:
    name: Deploy to PythonAnywhere
    needs: security_analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
      - run: |
          pip install requests
          PYTHONANYWHERE_API_TOKEN="${{ secrets.API }}"
          USERNAME="${{ secrets.USERNAME }}"
          PROJECT_PATH="/home/${USERNAME}/ccse2" 
          WEB_APP_NAME="dinoexho.pythonanywhere.com" 

          #upload the files
          curl -X POST -H "Authorization: Token ${PYTHONANYWHERE_API_TOKEN}" -F "content=@main.py" "https://www.pythonanywhere.com/api/v0/user/${USERNAME}/files/path${PROJECT_PATH}/main.py"
          curl -X POST -H "Authorization: Token ${PYTHONANYWHERE_API_TOKEN}" -F "content=@library.py" "https://www.pythonanywhere.com/api/v0/user/${USERNAME}/files/path${PROJECT_PATH}/library.py"
          curl -X POST -H "Authorization: Token ${PYTHONANYWHERE_API_TOKEN}" -F "content=@models.py" "https://www.pythonanywhere.com/api/v0/user/${USERNAME}/files/path${PROJECT_PATH}/models.py"
          curl -X POST -H "Authorization: Token ${PYTHONANYWHERE_API_TOKEN}" -F "content=@requirements.txt" "https://www.pythonanywhere.com/api/v0/user/${USERNAME}/files/path${PROJECT_PATH}/requirements.txt"

          #static/customerstyle
          find static/customerstyle -type f -print0 | while IFS= read -r -d $'\0' file; do
            filename=$(basename "$file")

            curl -X POST -H "Authorization: Token ${PYTHONANYWHERE_API_TOKEN}" -F "content=@${file}" "https://www.pythonanywhere.com/api/v0/user/${USERNAME}/files/path${PROJECT_PATH}/static/customerstyle/${filename}"

            if [ $? -eq 0 ]; then
              echo "Successfully uploaded ${file}"
            else
              echo "Failed to upload ${file}"
              exit 1
            fi
          done

             #static/adminstyle
          find static/adminstyle -type f -print0 | while IFS= read -r -d $'\0' file; do
            filename=$(basename "$file")

            curl -X POST -H "Authorization: Token ${PYTHONANYWHERE_API_TOKEN}" -F "content=@${file}" "https://www.pythonanywhere.com/api/v0/user/${USERNAME}/files/path${PROJECT_PATH}/static/adminstyle/${filename}"

            if [ $? -eq 0 ]; then
              echo "Successfully uploaded ${file}"
            else
              echo "Failed to upload ${file}"
              exit 1
            fi
          done

             #templates/customer
          find templates/customer -type f -print0 | while IFS= read -r -d $'\0' file; do
            filename=$(basename "$file")

            curl -X POST -H "Authorization: Token ${PYTHONANYWHERE_API_TOKEN}" -F "content=@${file}" "https://www.pythonanywhere.com/api/v0/user/${USERNAME}/files/path${PROJECT_PATH}/templates/customer/${filename}"

            if [ $? -eq 0 ]; then
              echo "Successfully uploaded ${file}"
            else
              echo "Failed to upload ${file}"
              exit 1
            fi
          done

             #templates/admin
          find templates/admin -type f -print0 | while IFS= read -r -d $'\0' file; do
            filename=$(basename "$file")

            curl -X POST -H "Authorization: Token ${PYTHONANYWHERE_API_TOKEN}" -F "content=@${file}" "https://www.pythonanywhere.com/api/v0/user/${USERNAME}/files/path${PROJECT_PATH}/templates/admin/${filename}"

            if [ $? -eq 0 ]; then
              echo "Successfully uploaded ${file}"
            else
              echo "Failed to upload ${file}"
              exit 1
            fi
          done
          
          #reload the page
          echo "PAGE RELOAD"
          curl -X POST \
               -H "Authorization: Token ${PYTHONANYWHERE_API_TOKEN}" \
               "https://www.pythonanywhere.com/api/v0/user/${USERNAME}/webapps/${WEB_APP_NAME}/reload/"


  owasp_zap_scan:
    name: OWASP ZAP Scan
    needs: deploy
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - uses: actions/checkout@v4
      - name: Run OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: "https://dinoexho.pythonanywhere.com/home"
